# This code should go in the "begin routine" of the first stimulus of your trial)
# I.e. in the neighborhood task, it is in the "begin routine" of the face onset.
#BOEI STEP 8a: start recording, parameters specify whether events and samples are
# send the standard "TRIALID" message to mark the start of a trial
# [see Data Viewer User Manual, Section 7: Protocol for EyeLink Data to Viewer Integration]
el.sendMessage("TRIALID_%s_%s_%s_%s")
# record_status_message : show some info on the host PC. This tells the experimenter the trial has started.
#set the string to whatever you want to identify the task.
%s = custom
el.sendCommand("record_status_message 'Task: %s'")
# stored in file, and available over the link. Each 1 corresponds to link_sample_data,, file_link_events, etc... We set this up in step 6!
el.startRecording(1,1,1,1)
pumpDelay(100) # wait for 100 ms to make sure data of interest is recorded
el.sendMessage("SYNCTIME")

BoEI STEP 8b: Start sending trial messages 

# this message marks the onset of the stimulus
el.sendMessage('DISPLAY_ON')
%s = custom
el.sendCommand("record_status_message 'Task: %s'")

# check for new samples (this is why we set up the eyes in step 1!)
dt = el.getNewestSample()
if (dt != None):
    if eye_used == RIGHT_EYE and dt.isRightSample():
        gazePos = dt.getRightEye().getGaze()
    elif eye_used != RIGHT_EYE and dt.isLeftSample():
        gazePos = dt.getLeftEye().getGaze()

# clear the host display, this command is needed if you are backdropping images
# to the host display (not demonstrated in this script)
#el.sendCommand('clear_screen 0') 
